#procedure Masters(ORDER,DEPTH)
*
*	File contains the master integrals for massless 4-loop propagator graphs.
*	The expansions are deeper than needed. This will allow them to be used
*	in future more-loop calculations.
*	The integrals were obtained from
*	Ref: R.N. Lee, A.V. Smirnov, V.A. Smirnov,
*      Master Integrals for Four-Loop Massless Propagators up to
*      Transcendentality Weight Twelve,
*      Nucl.Phys. B856 (2012) 95-110, arXiv:1108.0732 [hep-th].
*	Definition    -> Fig. 1
*	Normalization -> Eq. (2) which is more or less the Gscheme
*	Our definition of the masters is different from LSS, because we work
*	with insertions. In addition we use the basis of the MZV datamine.
*	Hence we have converted the integrals to our masters.
*	They are defined in the forcer paper.
*
id	Master(no1) =
      +ep^-1*(-5*z5)
      +161/2*z7-25/2*z6+45*z5-41*z3^2
      +ep*(3132/5*z5z3-24641/20*z8-1065/2*z7+225/2*z6-195*z5+1730*z3*z5
         -123*z3*z4+225*z3^2)
      +ep^2*(5724/5*z5z3+111709/36*z9-187769/40*z8-1713/2*z7-975/2*z6+
         625*z5-2103*z4*z5+4325*z3*z6-294*z3*z5+675*z3*z4+273*z3^2+1526/
         3*z3^3)
      +ep^3*(500565/56*z7z3-147636/5*z5z3-6813889/112*z10-185227/9*z9+
         2742261/40*z8+53819/2*z7+3125/2*z6-1875*z5+1341143/56*z5^2-
         9027*z4*z5+118443/2*z3*z7-530*z3*z6-66990*z3*z5+819*z3*z4-7979
         *z3^2+2289*z3^2*z4+2210/3*z3^3)
      +ep^4*(594424/5*z5z3z3+304359/14*z7z3+470556/5*z5z3-8522762527/
         960*z11-7696277/28*z10-153857/6*z9+5349816*z9*z2-5233171/40*z8
         -400401/2*z7-9375/2*z6+5625*z5-308042*z5*z6-1143845/14*z5^2+
         10310991/40*z4*z7+120969*z4*z5-472716/5*z3*z5z3+4246229/10*z3*
         z8+164234*z3*z7-168600*z3*z6+340202*z3*z5-23937*z3*z4+55041*
         z3^2-129558*z3^2*z5+3315*z3^2*z4-28906*z3^3)
      +ep^5*(-58741243/36*z9z3-1275668/3*z6z4z1z1-1336912/5*z5z3z3-
         12956175/28*z7z3+1275668*z7z3*z2+159084/5*z5z3-3717389732429/
         442240*z12+4693372729/240*z11+210501591/56*z10+17022395/18*z9-
         12032208*z9*z2-32160239/40*z8+2180979/2*z7+28125/2*z6-16875*z5
         +10516118/3*z5*z7-51114*z5*z6-11925777/28*z5^2+4464838/3*z5^2*
         z2+3371732/5*z4*z5z3-10123347/10*z4*z7-195531*z4*z5+779328/5*
         z3*z5z3-82469992/27*z3*z9+4113131/20*z3*z8-3309117*z3*z7+
         12756680/3*z3*z7*z2+849140*z3*z6-985566*z3*z5+165123*z3*z4+
         323366/3*z3*z4*z5-289539*z3^2-1284461*z3^2*z6+268910*z3^2*z5-
         130077*z3^2*z4+466634/3*z3^3-67792/9*z3^4)
      +ep^6*(ALARMno1);

id	Master(no2)=
      +ep^-1*(-10*z5)
      -70*z7-25*z6+130*z5-10*z3^2
      +ep*(432*z5z3-1289*z8+831/2*z7+325*z6-870*z5+400*z3*z5-30*z3*z4+
         970*z3^2)
      +ep^2*(-16524/5*z5z3-58460/9*z9+95021/10*z8+22461/2*z7-2175*z6+
         4250*z5-2640*z4*z5+1000*z3*z6-2340*z3*z5+2910*z3*z4-10734*z3^2
         +4528/3*z3^3)
      +ep^3*(88260/7*z7z3+77436/5*z5z3-950710/7*z10+710543/18*z9+32881/
         10*z8-280391/2*z7+10625*z6-17750*z5+143960/7*z5^2+21276*z4*z5+
         58189*z3*z7-5800*z3*z6+73500*z3*z5-32202*z3*z4+63650*z3^2+6792
         *z3^2*z4-12788/3*z3^3)
      +ep^4*(-164008*z5z3z3-2076267/28*z7z3-363636/5*z5z3+577508911/48*
         z11+45349111/56*z10+6792223/18*z9-7380360*z9*z2-3354911/10*z8+
         1680885/2*z7-44375*z6+68250*z5+328120*z5*z6-2560409/28*z5^2-
         1339041/2*z4*z7-5904*z4*z5+387288/5*z3*z5z3+248583/10*z3*z8-
         314912*z3*z7+178900*z3*z6-799916*z3*z5+190950*z3*z4-278990*
         z3^2+207916*z3^2*z5-19182*z3^2*z4-81796/3*z3^3)
      +ep^5*(-23626165/9*z9z3-2077280/3*z6z4z1z1+4006072/5*z5z3z3+
         5258073/28*z7z3+2077280*z7z3*z2+299052*z5z3-1822155305421/
         110560*z12-28100374133/480*z11+3456371/56*z10-95476663/18*z9+
         36054648*z9*z2+4697467/2*z8-7301715/2*z7+170625*z6-249750*z5+
         17551919/3*z5*z7-1383426*z5*z6+17353811/28*z5^2+7270480/3*z5^2
         *z2+4544072/5*z4*z5z3+69769509/20*z4*z7-654420*z4*z5-1858464/5
         *z3*z5z3-150233854/27*z3*z9-2172379/10*z3*z8+1788584*z3*z7+
         20772800/3*z3*z7*z2-1946120*z3*z6+4670700*z3*z5-836970*z3*z4-
         910192/3*z3*z4*z5+1041330*z3^2-1049490*z3^2*z6-922376*z3^2*z5-
         122694*z3^2*z4+651652/3*z3^3+342086/9*z3^4)
      +ep^6*(ALARMno2);

id	Master(haha) =
      +ep^-1*(-10*z5)
      -25*z6+50*z5-10*z3^2
      +ep*(19/2*z7+125*z6+90*z5-30*z3*z4+50*z3^2)
      +ep^2*(324/5*z5z3-621/10*z8+2229/2*z7+225*z6-1750*z5+1240*z3*z5+
         150*z3*z4+234*z3^2)
      +ep^3*(-2916/5*z5z3+21637/3*z9+50039/10*z8-24279/2*z7-4375*z6+
         10250*z5+1374*z4*z5+3150*z3*z6-1200*z3*z5+702*z3*z4-3910*z3^2+
         3440/3*z3^3)
      +ep^4*(-6642/7*z7z3+6156/5*z5z3+310293/7*z10+15172/3*z9-456369/10
         *z8+120925/2*z7+25625*z6-45750*z5+287486/7*z5^2+2574*z4*z5+908
         *z3*z7-3250*z3*z6-65544*z3*z5-11730*z3*z4+27530*z3^2+5160*z3^2
         *z4-10808/3*z3^3)
      +ep^5*(-147552/5*z5z3z3+79371/14*z7z3+11340*z5z3+307229207/120*
         z11-1293063/28*z10-1437817/3*z9-1327968*z9*z2+378525/2*z8-
         379275/2*z7-114375*z6+182250*z5+291066*z5*z6-2971583/14*z5^2-
         336216/5*z4*z7-107550*z4*z5-82944/5*z3*z5z3+206188/5*z3*z8+
         151654*z3*z7-165030*z3*z6+507760*z3*z5+82590*z3*z4-147990*z3^2
         -76600*z3^2*z5-16212*z3^2*z4-48512*z3^3)
      +ep^6*(-2615746/9*z9z3-186272/3*z6z4z1z1+648768/5*z5z3z3-143118/7
         *z7z3+186272*z7z3*z2-131220*z5z3+280245139603/165840*z12-
         2494641451/240*z11-14038197/7*z10+9480250/3*z9+5838912*z9*z2-
         728075/2*z8+714825/2*z7+455625*z6-681750*z5+4835318/3*z5*z7-
         1474994*z5*z6-906054/7*z5^2+651952/3*z5^2*z2+119936/5*z4*z5z3+
         4976853/10*z4*z7+676590*z4*z5+859248/5*z3*z5z3-33111634/27*z3*
         z9+493324/5*z3*z8-1987728*z3*z7+1862720/3*z3*z7*z2+1288950*z3*
         z6-2347080*z3*z5-443970*z3*z4-409288/3*z3*z4*z5+694170*z3^2-
         339804*z3^2*z6+485584*z3^2*z5-218304*z3^2*z4+1649480/3*z3^3-
         627760/9*z3^4)
      +ep^7*(ALARMhaha);

id	Master(no6)=
      +ep^-1*(-5*z5)
      -25/2*z6+45*z5-17*z3^2
      +ep*(-85/2*z7+225/2*z6-195*z5-51*z3*z4+153*z3^2)
      +ep^2*(-8532/5*z5z3+158967/40*z8+765/2*z7-975/2*z6+625*z5-3118*z3
         *z5+459*z3*z4-663*z3^2)
      +ep^3*(76788/5*z5z3+16232/3*z9-1430703/40*z8-3315/2*z7+3125/2*z6-
         1875*z5+8121*z4*z5-7710*z3*z6+28062*z3*z5-1989*z3*z4+2125*z3^2
         -4310/3*z3^3)
      +ep^4*(-171531/7*z7z3-332748/5*z5z3+1624779/7*z10-48696*z9+
         6199713/40*z8+10625/2*z7-9375/2*z6+5625*z5-863970/7*z5^2-73089
         *z4*z5-57352*z3*z7+69390*z3*z6-121602*z3*z5+6375*z3*z4-6375*
         z3^2-6465*z3^2*z4+12930*z3^3)
      +ep^5*(-125424/5*z5z3z3+1543779/7*z7z3+213300*z5z3+44097609/20*
         z11-14623011/7*z10+211016*z9-1128816*z9*z2-3974175/8*z8-31875/
         2*z7+28125/2*z6-16875*z5-200378*z5*z6+7775730/7*z5^2+1766553/5
         *z4*z7+316719*z4*z5+441936/5*z3*z5z3-7974453/20*z3*z8+516168*
         z3*z7-300690*z3*z6+389750*z3*z5-19125*z3*z4+19125*z3^2+45590*
         z3^2*z5+58185*z3^2*z4-56030*z3^3)
      +ep^6*(1576792/3*z9z3+208160*z6z4z1z1+1128816/5*z5z3z3-6689709/7*
         z7z3-624480*z7z3*z2-639900*z5z3+1178232484681/110560*z12-
         396878481/20*z11+63366381/7*z10-2029000/3*z9+10159344*z9*z2+
         11922525/8*z8+95625/2*z7-84375/2*z6+50625*z5-6234680*z5*z7+
         1803402*z5*z6-33694830/7*z5^2-728560*z5^2*z2-1086432/5*z4*z5z3
         -15898977/5*z4*z7-1015125*z4*z5-3977424/5*z3*z5z3+11117338/9*
         z3*z9+71770077/20*z3*z8-2236728*z3*z7-2081600*z3*z7*z2+963750*
         z3*z6-1169250*z3*z5+57375*z3*z4-422054*z3*z4*z5-57375*z3^2+
         593110*z3^2*z6-410310*z3^2*z5-252135*z3^2*z4+538750/3*z3^3+
         92821/3*z3^4)
      +ep^7*(ALARMno6);

id	Master(nono)=
      +36*z3^2
      +ep*(-378*z7+108*z3*z4)
      +ep^2*(3024/5*z5z3-26901/10*z8+2844*z3*z5+432*z3^2)
      +ep^3*(-42458/3*z9-4536*z7-270*z4*z5+6930*z3*z6+1296*z3*z4+2304*
         z3^2-732*z3^3)
      +ep^4*(58563/7*z7z3+36288/5*z5z3-836958/7*z10-161406/5*z8-24192*
         z7+202569/7*z5^2+91332*z3*z7+34128*z3*z5+6912*z3*z4+13824*z3^2
         -3294*z3^2*z4)
      +ep^5*(216768/5*z5z3z3+193536/5*z5z3-73041423/20*z11-169832*z9+
         1950912*z9*z2-860832/5*z8-145152*z7-88734*z5*z6+456849/5*z4*z7
         -3240*z4*z5-175392/5*z3*z5z3+3745413/10*z3*z8+83160*z3*z6+
         182016*z3*z5+41472*z3*z4+82944*z3^2-101952*z3^2*z5-8784*z3^3)
      +ep^6*(-1132952/3*z9z3-120064*z6z4z1z1+702756/7*z7z3+360192*z7z3*
         z2+1161216/5*z5z3-296966758791/55280*z12-10043496/7*z10-
         2717312/3*z9-5164992/5*z8-870912*z7+2100799*z5*z7+2430828/7*
         z5^2+420224*z5^2*z2+962544/5*z4*z5z3-17280*z4*z5+9455470/9*z3*
         z9+1095984*z3*z7+1200640*z3*z7*z2+443520*z3*z6+1092096*z3*z5+
         248832*z3*z4-102800*z3*z4*z5+497664*z3^2-519534*z3^2*z6-39528*
         z3^2*z4-46848*z3^3+37216/3*z3^4)
      +ep^7*(ALARMnono);

id	Master(lala)=
      +441/8*z7
      +ep*(-81/5*z5z3+18567/80*z8-1323/4*z7-135*z3*z5)
      +ep^2*(486/5*z5z3+4583/2*z9-55701/40*z8+1323/2*z7-81*z4*z5-675/2*
         z3*z6+810*z3*z5-267*z3^3)
      +ep^3*(-18441/56*z7z3-972/5*z5z3+1288053/112*z10-13749*z9+55701/
         20*z8-441*z7-502287/56*z5^2+486*z4*z5+765/4*z3*z7+2025*z3*z6-
         1620*z3*z5-2403/2*z3^2*z4+1602*z3^3)
      +ep^4*(-12582/5*z5z3z3+55323/28*z7z3+648/5*z5z3+42903141/160*z11-
         3864159/56*z10+27498*z9-113238*z9*z2-18567/10*z8-66963/2*z5*z6
         +1506861/28*z5^2-6939/20*z4*z7-972*z4*z5+1134*z3*z5z3-5985/2*
         z3*z8-2295/2*z3*z7-4050*z3*z6+1080*z3*z5-14682*z3^2*z5+7209*
         z3^2*z4-3204*z3^3)
      +ep^5*(68177/2*z9z3+10716*z6z4z1z1+75492/5*z5z3z3-55323/14*z7z3-
         32148*z7z3*z2+147336762993/221120*z12-128709423/80*z11+3864159/
         28*z10-18332*z9+679428*z9*z2-527655*z5*z7+200889*z5*z6-1506861/
         14*z5^2-37506*z5^2*z2-90738/5*z4*z5z3+20817/10*z4*z7+648*z4*z5
         -6804*z3*z5z3+541696/3*z3*z9+17955*z3*z8+2295*z3*z7-107160*z3*
         z7*z2+2700*z3*z6-47193*z3*z4*z5-21183/2*z3^2*z6+88092*z3^2*z5-
         14418*z3^2*z4+2136*z3^3+4237*z3^4)
      +ep^6*(ALARMlala);

id	Master(bebe)=
      +ep^-2*(1/2*z3)
      +ep^-1*(3/4*z4+3/2*z3)
      -23/2*z5+9/4*z4+19/2*z3
      +ep*(-30*z6-69/2*z5+57/4*z4+103/2*z3+29/2*z3^2)
      +ep^2*(-1105/4*z7-90*z6-437/2*z5+309/4*z4+547/2*z3+87/2*z3*z4+87/
         2*z3^2)
      +ep^3*(486/5*z5z3-84627/80*z8-3315/4*z7-570*z6-2369/2*z5+1641/4*
         z4+2863/2*z3+1153*z3*z5+261/2*z3*z4+551/2*z3^2)
      +ep^4*(1458/5*z5z3-5144*z9-253881/80*z8-20995/4*z7-3090*z6-12581/
         2*z5+8589/4*z4+2001/2*z4*z5+14827/2*z3+2810*z3*z6+3459*z3*z5+
         1653/2*z3*z4+2987/2*z3^2-967*z3^3)
      +ep^5*(1296*z7z3+9234/5*z5z3-100629/4*z10-15432*z9-1607913/80*z8-
         113815/4*z7-16410*z6-65849/2*z5+35235/2*z5^2+44481/4*z4+6003/2
         *z4*z5+76183/2*z3+40769/2*z3*z7+8430*z3*z6+21907*z3*z5+8961/2*
         z3*z4+15863/2*z3^2-8703/2*z3^2*z4-2901*z3^3)
      +ep^6*(12852/5*z5z3z3+3888*z7z3+50058/5*z5z3-45816811/160*z11-
         301887/4*z10-97736*z9+115668*z9*z2-8716581/80*z8-604435/4*z7-
         85890*z6-341021/2*z5+60554*z5*z6+105705/2*z5^2+228549/4*z4+
         221439/20*z4*z7+38019/2*z4*z5+389107/2*z3-28188/5*z3*z5z3+
         2702823/40*z3*z8+122307/2*z3*z7+53390*z3*z6+118759*z3*z5+47589/
         2*z3*z4+83027/2*z3^2-61517*z3^2*z5-26109/2*z3^2*z4-18373*z3^3)
      +ep^7*(-116177/2*z9z3-17376*z6z4z1z1+38556/5*z5z3z3+24624*z7z3+
         52128*z7z3*z2+265842/5*z5z3-78903546213/110560*z12-137450433/
         160*z11-1911951/4*z10-529832*z9+347004*z9*z2-46290969/80*z8-
         3163615/4*z7-444810*z6-1752209/2*z5+1372983/2*z5*z7+181662*z5*
         z6+669465/2*z5^2+60816*z5^2*z2+1167321/4*z4+107316/5*z4*z5z3+
         664317/20*z4*z7+206103/2*z4*z5+1978303/2*z3-84564/5*z3*z5z3+
         144225*z3*z9+8108469/40*z3*z8+774611/2*z3*z7+173760*z3*z7*z2+
         289430*z3*z6+630691*z3*z5+249081/2*z3*z4-150957*z3*z4*z5+
         429983/2*z3^2-185636*z3^2*z6-184551*z3^2*z5-165357/2*z3^2*z4-
         99601*z3^3+137653/6*z3^4)
      +ep^8*(ALARMbebe);

id	Master(cross)=
      +ep^-1*(5*z5)
      +25/2*z6-5*z5-7*z3^2
      +ep*(127/2*z7-25/2*z6+35*z5-21*z3*z4+7*z3^2)
      +ep^2*(972/5*z5z3-12387/40*z8-127/2*z7+175/2*z6+135*z5+22*z3*z5+
         21*z3*z4-49*z3^2)
      +ep^3*(-972/5*z5z3+346/3*z9+12387/40*z8+889/2*z7+675/2*z6+675*z5-
         1425*z4*z5+90*z3*z6-22*z3*z5-147*z3*z4-189*z3^2+1742/3*z3^3)
      +ep^4*(11799/7*z7z3+6804/5*z5z3-112509/7*z10-346/3*z9-86709/40*z8
         +3429/2*z7+3375/2*z6+3375*z5-32958/7*z5^2+1425*z4*z5+8776*z3*
         z7-90*z3*z6+154*z3*z5-567*z3*z4-945*z3^2+2613*z3^2*z4-1742/3*
         z3^3)
      +ep^5*(21744/5*z5z3z3-11799/7*z7z3+26244/5*z5z3-6987509/20*z11+
         112509/7*z10+2422/3*z9+195696*z9*z2-334449/40*z8+17145/2*z7+
         16875/2*z6+16875*z5-57322*z5*z6+32958/7*z5^2-45933/5*z4*z7-
         9975*z4*z5-27216/5*z3*z5z3+962073/20*z3*z8-8776*z3*z7+630*z3*
         z6+594*z3*z5-2835*z3*z4-4725*z3^2+22114*z3^2*z5-2613*z3^2*z4+
         12194/3*z3^3)
      +ep^6*(47968*z9z3+7008*z6z4z1z1-21744/5*z5z3z3+11799*z7z3-21024*
         z7z3*z2+26244*z5z3-44624048221/110560*z12+6987509/20*z11-
         112509*z10+3114*z9-195696*z9*z2-334449/8*z8+85725/2*z7+84375/2
         *z6+84375*z5-182628*z5*z7+57322*z5*z6-32958*z5^2-24528*z5^2*z2
         -60768/5*z4*z5z3+45933/5*z4*z7-38475*z4*z5+27216/5*z3*z5z3+
         1179610/3*z3*z9-962073/20*z3*z8+61432*z3*z7-70080*z3*z7*z2+
         2430*z3*z6+2970*z3*z5-14175*z3*z4+110670*z3*z4*z5-23625*z3^2+
         66698*z3^2*z6-22114*z3^2*z5+18291*z3^2*z4+15678*z3^3-15059*
         z3^4)
      +ep^7*(ALARMcross);

id	Master(fastar2)=
      +20*z5
      +ep*(50*z6-80*z5-4*z3^2)
      +ep^2*(639*z7-200*z6+80*z5-12*z3*z4+16*z3^2)
      +ep^3*(648/5*z5z3+795539/480*z8-2556*z7+200*z6+1103/16*z4^2-456*
         z3*z5+48*z3*z4-16*z3^2)
      +ep^4*(-2592/5*z5z3+142462/9*z9-795539/120*z8+2556*z7-1656*z4*z5-
         1103/4*z4^2-1120*z3*z6+1824*z3*z5-48*z3*z4+328/3*z3^3)
      +ep^5*(9276/7*z7z3+2592/5*z5z3+6795857/168*z10-569848/9*z9+
         1535533/240*z8-52700/7*z5^2+50095/12*z4*z6+6624*z4*z5+3793/8*
         z4^2-12458*z3*z7+4480*z3*z6-1824*z3*z5+492*z3^2*z4-1312/3*z3^3
         )
      +ep^6*(-21824/5*z5z3z3-37104/7*z7z3+10409948/15*z11-6795857/42*
         z10+569848/9*z9-196416*z9*z2-18515/16*z8-43848*z5*z6+210800/7*
         z5^2-298047/5*z4*z7-50095/3*z4*z6-6624*z4*z5+7935/8*z4^2-9072/
         5*z3*z5z3-7177093/240*z3*z8+49832*z3*z7-4480*z3*z6-31177/8*z3*
         z4^2+8176*z3^2*z5-1968*z3^2*z4+1312/3*z3^3)
      +ep^7*(484088/9*z9z3+27136/3*z6z4z1z1+87296/5*z5z3z3+37104/7*z7z3
         -27136*z7z3*z2+3997436275537/3980160*z12-41639792/15*z11+
         12640687/84*z10+785664*z9*z2-107387/16*z8+2122175/36*z6^2-
         1205698/3*z5*z7+175392*z5*z6-210800/7*z5^2-94976/3*z5^2*z2-
         114184/5*z4*z5z3+1616643/16*z4*z8+1192188/5*z4*z7+161945/6*z4*
         z6+46023/8*z4^2-31177/16*z4^3+36288/5*z3*z5z3-5186956/27*z3*z9
         +7177093/60*z3*z8-49832*z3*z7-271360/3*z3*z7*z2+127976/3*z3*z4
         *z5+31177/2*z3*z4^2+39972*z3^2*z6-32704*z3^2*z5+1968*z3^2*z4-
         21064/9*z3^4)
      +ep^8*(ALARMfastar2);

id	Master(nostar5)=
      +20*z5
      +ep*(50*z6-80*z5+86*z3^2)
      +ep^2*(5777/8*z7-200*z6+80*z5+258*z3*z4-344*z3^2)
      +ep^3*(-22977/5*z5z3+6622129/480*z8-5777/2*z7+200*z6-1541/16*z4^2
         -6646*z3*z5-1032*z3*z4+344*z3^2)
      +ep^4*(91908/5*z5z3+198659/8*z9-6571099/120*z8+5777/2*z7+48993/2*
         z4*z5+83/4*z4^2-17045*z3*z6+26584*z3*z5+1032*z3*z4-4314*z3^3)
      +ep^5*(-868257/16*z7z3-91908/5*z5z3+56482267/96*z10-198659/2*z9+
         13639583/240*z8-1689475/16*z5^2-276415/12*z4*z6-97986*z4*z5-
         14377/8*z4^2-1042227/4*z3*z7+68180*z3*z6-26584*z3*z5-19413*
         z3^2*z4+17256*z3^3)
      +ep^6*(272556/5*z5z3z3+868257/4*z7z3-2166134937/640*z11-55969051/
         24*z10+198659/2*z9+2453004*z9*z2+32123/4*z8+217849/2*z5*z6+
         1689475/4*z5^2+72982863/80*z4*z7+218095/3*z4*z6+97986*z4*z5-
         13767/2*z4^2+581958/5*z3*z5z3-140000509/120*z3*z8+1042227*z3*
         z7-68180*z3*z6-490*z3*z4^2+45786*z3^2*z5+77652*z3^2*z4-17256*
         z3^3)
      +ep^7*(-2327797/24*z9z3+143882*z6z4z1z1-1090224/5*z5z3z3-868257/4
         *z7z3-431646*z7z3*z2+153044931672229/7960320*z12+2166134937/
         160*z11+58421677/24*z10-9812016*z9*z2+1259447/32*z8-18510725/
         36*z6^2-22164529/4*z5*z7-435698*z5*z6-1689475/4*z5^2-503587*
         z5^2*z2+202656/5*z4*z5z3-22801077/32*z4*z8-72982863/20*z4*z7-
         993605/6*z4*z6-539763/16*z4^2-21487/8*z4^3-2327832/5*z3*z5z3-
         49096382/9*z3*z9+139541239/30*z3*z8-1042227*z3*z7-1438820*z3*
         z7*z2-663638*z3*z4*z5+15082*z3*z4^2+941109/2*z3^2*z6-183144*
         z3^2*z5-77652*z3^2*z4+539969/6*z3^4)
      +ep^8*(ALARMnostar5);

id	Master(nostar6)=
      +20*z5
      +ep*(50*z6-80*z5+80*z3^2)
      +ep^2*(625*z7-200*z6+80*z5+240*z3*z4-320*z3^2)
      +ep^3*(-3240*z5z3+144241/12*z8-2500*z7+200*z6-3373/2*z4^2-4480*z3
         *z5-960*z3*z4+320*z3^2)
      +ep^4*(12960*z5z3+109895/6*z9-1146935/24*z8+2500*z7+17580*z4*z5+
         25985/4*z4^2-11600*z3*z6+17920*z3*z5+960*z3*z4-2920*z3^3)
      +ep^5*(-907155/28*z7z3-12960*z5z3+75774169/168*z10-219790/3*z9+
         2506579/48*z8-1960705/28*z5^2-276190/3*z4*z6-70320*z4*z5-82357/
         8*z4^2-146055*z3*z7+46400*z3*z6-17920*z3*z5-13140*z3^2*z4+
         11680*z3^3)
      +ep^6*(45672*z5z3z3+907155/7*z7z3-95731961/32*z11-75262735/42*z10
         +219790/3*z9+2055240*z9*z2+491617/32*z8-7630*z5*z6+1960705/7*
         z5^2+2393199/4*z4*z7+1071550/3*z4*z6+70320*z4*z5-210693/16*
         z4^2+69336*z3*z5z3-4448819/6*z3*z8+584220*z3*z7-46400*z3*z6+
         69086*z3*z4^2+42360*z3^2*z5+52560*z3^2*z4-11680*z3^3)
      +ep^7*(-6730525/6*z9z3-182440*z6z4z1z1-182688*z5z3z3-907155/7*
         z7z3+547320*z7z3*z2+3684933047003/398016*z12+95731961/8*z11+
         84049051/42*z10-8220960*z9*z2+4633853/64*z8-11070350/9*z6^2-
         3252395/2*z5*z7+30520*z5*z6-1960705/7*z5^2+638540*z5^2*z2+
         446172*z4*z5z3-4237653/2*z4*z8-2393199*z4*z7-1642090/3*z4*z6-
         1985937/32*z4^2+34543*z4^3-277344*z3*z5z3-49890065/9*z3*z9+
         17743679/6*z3*z8-584220*z3*z7+1824400*z3*z7*z2-484160*z3*z4*z5
         -268973*z3*z4^2-282690*z3^2*z6-169440*z3^2*z5-52560*z3^2*z4+
         214090/3*z3^4)
      +ep^8*(ALARMnostar6);

id	Master(no)=
      +20*z5
      +ep*(50*z6-80*z5+68*z3^2)
      +ep^2*(450*z7-200*z6+80*z5+204*z3*z4-272*z3^2)
      +ep^3*(-9072/5*z5z3+59633/10*z8-1800*z7+200*z6-2448*z3*z5-816*z3*
         z4+272*z3^2)
      +ep^4*(36288/5*z5z3+88036/9*z9-119266/5*z8+1800*z7+9936*z4*z5-
         6460*z3*z6+9792*z3*z5+816*z3*z4-4640/3*z3^3)
      +ep^5*(-85026/7*z7z3-36288/5*z5z3+991604/7*z10-352144/9*z9+119266/
         5*z8-171050/7*z5^2-39744*z4*z5-57152*z3*z7+25840*z3*z6-9792*z3
         *z5-6960*z3^2*z4+18560/3*z3^3)
      +ep^6*(81376/5*z5z3z3+340104/7*z7z3-31418849/30*z11-3966416/7*z10
         +352144/9*z9+732384*z9*z2+2772*z5*z6+684200/7*z5^2+1090878/5*
         z4*z7+39744*z4*z5+72576/5*z3*z5z3-1122212/5*z3*z8+228608*z3*z7
         -25840*z3*z6-9800*z3^2*z5+27840*z3^2*z4-18560/3*z3^3)
      +ep^7*(-1393864/9*z9z3-46400/3*z6z4z1z1-325504/5*z5z3z3-340104/7*
         z7z3+46400*z7z3*z2+29283947297/13820*z12+62837698/15*z11+
         3966416/7*z10-2929536*z9*z2-1687480/3*z5*z7-11088*z5*z6-684200/
         7*z5^2+162400/3*z5^2*z2+346928/5*z4*z5z3-4363512/5*z4*z7-
         290304/5*z3*z5z3-29983336/27*z3*z9+4488848/5*z3*z8-228608*z3*
         z7+464000/3*z3*z7*z2-437992/3*z3*z4*z5-47700*z3^2*z6+39200*
         z3^2*z5-27840*z3^2*z4+147908/9*z3^4)
      +ep^8*(ALARMno);

id	Master(t155)=
      +6*z3
      +ep*(9*z4-12*z3)
      +ep^2*(192*z5-18*z4)
      +ep^3*(465*z6-384*z5-168*z3^2)
      +ep^4*(4509*z7-930*z6-504*z3*z4+336*z3^2)
      +ep^5*(648*z5z3+295483/24*z8-9018*z7-529/4*z4^2-6492*z3*z5+1008*
         z3*z4)
      +ep^6*(-1296*z5z3+98490*z9-295483/12*z8-14598*z4*z5+529/2*z4^2-
         15390*z3*z6+12984*z3*z5+2676*z3^3)
      +ep^7*(47790/7*z7z3+5873824/21*z10-196980*z9-3703/4*z8-469494/7*
         z5^2-20585/3*z4*z6+29196*z4*z5+1587/2*z4^2-123894*z3*z7+30780*
         z3*z6+12042*z3^2*z4-5352*z3^3)
      +ep^8*(-23328*z5z3z3-95580/7*z7z3+3887580*z11-11747648/21*z10-
         1049760*z9*z2-25921/4*z8-355110*z5*z6+938988/7*z5^2-399195*z4*
         z7+41170/3*z4*z6+11109/2*z4^2-6480*z3*z5z3-4208591/12*z3*z8+
         247788*z3*z7+12167/2*z3*z4^2+137616*z3^2*z5-24084*z3^2*z4)
      +ep^9*(189720*z9z3+25920*z6z4z1z1+46656*z5z3z3-77760*z7z3*z2+
         1286567660543/199008*z12-7775160*z11-45287*z10+2099520*z9*z2-
         159229/4*z8-801025/9*z6^2-2811438*z5*z7+710220*z5*z6-90720*
         z5^2*z2-83592*z4*z5z3-610029/4*z4*z8+798390*z4*z7+41170*z4*z6+
         68241/2*z4^2+12167/4*z4^3+12960*z3*z5z3-2159960*z3*z9+4208591/
         6*z3*z8-259200*z3*z7*z2+474408*z3*z4*z5-12167*z3*z4^2+382290*
         z3^2*z6-275232*z3^2*z5-33184*z3^4)
      +ep^10*(ALARMt155);

id	Master(t124)=
      +6*z3
      +ep*(9*z4-12*z3)
      +ep^2*(127*z5-18*z4)
      +ep^3*(605/2*z6-254*z5-173*z3^2)
      +ep^4*(18989/8*z7-605*z6-519*z3*z4+346*z3^2)
      +ep^5*(243/5*z5z3+549939/80*z8-18989/4*z7-639/4*z4^2-6082*z3*z5+
         1038*z3*z4)
      +ep^6*(-486/5*z5z3+1084927/24*z9-1100823/80*z8-18975/2*z4*z5+2637/
         8*z4^2-14340*z3*z6+12164*z3*z5+8554/3*z3^3)
      +ep^7*(40851/112*z7z3+32125953/224*z10-1084927/12*z9-6909/16*z8-
         5959047/112*z5^2-17115/2*z4*z6+18975*z4*z5+2961/8*z4^2-426805/
         4*z3*z7+28680*z3*z6+12831*z3^2*z4-17108/3*z3^3)
      +ep^8*(-1764/5*z5z3z3-40851/56*z7z3+591012973/640*z11-32150901/
         112*z10-15876*z9*z2-34545/16*z8-509611/2*z5*z6+5959047/56*z5^2
         -13501587/80*z4*z7+34635/2*z4*z6+14805/8*z4^2-8262/5*z3*z5z3-
         12341253/40*z3*z8+426805/2*z3*z7+9522*z3*z4^2+142118*z3^2*z5-
         25662*z3^2*z4)
      +ep^9*(64531/8*z9z3+1182*z6z4z1z1+3528/5*z5z3z3-3546*z7z3*z2+
         2631913789281/884480*z12-591012973/320*z11-79761/4*z10+31752*
         z9*z2-159285/16*z8-214825/2*z6^2-3745875/2*z5*z7+509611*z5*z6-
         4137*z5^2*z2-23904/5*z4*z5z3-192591*z4*z8+13501587/40*z4*z7+
         36255/2*z4*z6+68265/8*z4^2+4761*z4^3+16524/5*z3*z5z3-5916949/3
         *z3*z9+3086022/5*z3*z8-11820*z3*z7*z2+439338*z3*z4*z5-38331/2*
         z3*z4^2+673139/2*z3^2*z6-284236*z3^2*z5-69787/2*z3^4)
      +ep^10*(ALARMt124);

id	Master(t145)=
      +6*z3
      +ep*(9*z4-12*z3)
      +ep^2*(157*z5-18*z4)
      +ep^3*(755/2*z6-314*z5-179*z3^2)
      +ep^4*(26657/8*z7-755*z6-537*z3*z4+358*z3^2)
      +ep^5*(243*z5z3+38195/4*z8-26657/4*z7-1743/8*z4^2-6736*z3*z5+1074
         *z3*z4)
      +ep^6*(-486*z5z3+1657525/24*z9-616223/32*z8-23853/2*z4*z5+9159/16
         *z4^2-15945*z3*z6+13472*z3*z5+8776/3*z3^3)
      +ep^7*(242325/112*z7z3+48355103/224*z10-1657525/12*z9-88515/64*z8
         -7112577/112*z5^2-10970*z4*z6+23853*z4*z5+37935/32*z4^2-126682
         *z3*z7+31890*z3*z6+13164*z3^2*z4-17552/3*z3^3)
      +ep^8*(-7488*z5z3z3-242325/56*z7z3+258270245/128*z11-49253231/112
         *z10-336960*z9*z2-999831/128*z8-622765/2*z5*z6+7112577/56*z5^2
         -4126767/16*z4*z7+29230*z4*z6+428499/64*z4^2-3888*z3*z5z3-
         1469159/4*z3*z8+253364*z3*z7+19743/2*z3*z4^2+148412*z3^2*z5-
         26328*z3^2*z4)
      +ep^9*(748115/8*z9z3+17070*z6z4z1z1+14976*z5z3z3-51210*z7z3*z2+
         2654003764111/530688*z12-258270245/64*z11-66330*z10+673920*z9*
         z2-10685283/256*z8-415300/3*z6^2-9941391/4*z5*z7+622765*z5*z6-
         59745*z5^2*z2-42669*z4*z5z3-1970073/8*z4*z8+4126767/8*z4*z7+
         60300*z4*z6+4579407/128*z4^2+19743/4*z4^3+7776*z3*z5z3-
         27604805/12*z3*z9+5922563/8*z3*z8-170700*z3*z7*z2+482931*z3*z4
         *z5-98655/4*z3*z4^2+774995/2*z3^2*z6-296824*z3^2*z5-72085/2*
         z3^4)
      +ep^10*(ALARMt145);
*
*	Note that this integral differs from its definition in the old Mincer
*	by two powers of ep.
*
id	Master(t105) =
      +6*z3
      +ep*(9*z4-12*z3)
      +ep^2*(102*z5-18*z4)
      +ep^3*(240*z6-204*z5-78*z3^2)
      +ep^4*(1413*z7-480*z6-234*z3*z4+156*z3^2)
      +ep^5*(648/5*z5z3+148157/40*z8-2826*z7-363/4*z4^2-1812*z3*z5+468*
         z3*z4)
      +ep^6*(-1296/5*z5z3+18918*z9-148157/20*z8-3690*z4*z5+363/2*z4^2-
         4140*z3*z6+3624*z3*z5+588*z3^3)
      +ep^7*(5751/7*z7z3+349078/7*z10-37836*z9-847/4*z8-79137/7*z5^2-
         2915*z4*z6+7380*z4*z5+363/2*z4^2-21240*z3*z7+8280*z3*z6+2646*
         z3^2*z4-1176*z3^3)
      +ep^8*(-11664/5*z5z3z3-11502/7*z7z3+8614689/20*z11-698156/7*z10-
         104976*z9*z2-4235/4*z8-56868*z5*z6+158274/7*z5^2-280557/5*z4*
         z7+5830*z4*z6+1815/2*z4^2-2592/5*z3*z5z3-1131379/20*z3*z8+
         42480*z3*z7+3993/2*z3*z4^2+19068*z3^2*z5-5292*z3^2*z4)
      +ep^9*(16812*z9z3+2592*z6z4z1z1+23328/5*z5z3z3-7776*z7z3*z2+
         228788947591/331680*z12-8614689/10*z11-6413*z10+209952*z9*z2-
         19481/4*z8-70225/3*z6^2-290160*z5*z7+113736*z5*z6-9072*z5^2*z2
         -40824/5*z4*z5z3-160083/4*z4*z8+561114/5*z4*z7+5830*z4*z6+8349/
         2*z4^2+3993/4*z4^3+5184/5*z3*z5z3-233768*z3*z9+1131379/10*z3*
         z8-25920*z3*z7*z2+62388*z3*z4*z5-3993*z3*z4^2+49092*z3^2*z6-
         38136*z3^2*z5-3466*z3^4)
      +ep^10*(ALARMt105);
*
*	The expansions for the Gscheme constants are made in the program
*	gzeta.frm.
*
.sort:Masters-1;
CF	InvGschemeConstants;
Symbols InvG10,InvG20,InvG30,InvG40,InvG50;
id	GschemeConstants(2,2) = GschemeConstants(3,1)*GschemeConstants(2,0)
			*InvGschemeConstants(1,0)*rat(1-4*ep,1-3*ep);
id	GschemeConstants(3,1)*GschemeConstants(0,0) = 
		GschemeConstants(4,0)*GschemeConstants(3,0)*rat(1-5*ep,1-2*ep);
id	GschemeConstants(?a)*InvGschemeConstants(?a) = 1;

#do i = 1,4
id	GschemeConstants(`i',0) = G`i'0*GschemeConstants(0,0)*
						rat(1-2*ep,1-{`i'+2}*ep);
id	InvGschemeConstants(`i',0) = InvG`i'0*InvGschemeConstants(0,0)*
						rat(1-{`i'+2}*ep,1-2*ep);
#enddo
id	GschemeConstants(?a)*InvGschemeConstants(?a) = 1;
id	GschemeConstants(0,0) = rat(1,ep);
.sort:Masters-2;
PolyRatFun rat(expand,ep,16);
.sort:Masters-3;
PolyRatFun;
id	rat(x?) = x;
if ( count(`ORDER',1,ep,1) > `DEPTH' ) Discard;

id	G10=
      +1
      +ep^3*(-6*z3)
      +ep^4*(-9*z4)
      +ep^5*(-42*z5)
      +ep^6*(18*z3^2-90*z6)
      +ep^7*(54*z4*z3-294*z7)
      +ep^8*(81/2*z4^2+252*z5*z3-1449/2*z8)
      +ep^9*(-36*z3^3+378*z5*z4+540*z6*z3-2130*z9)
      +ep^10*(-162*z4*z3^2+882*z5^2+810*z6*z4+1764*z7*z3-5598*z10)
      +ep^11*(-243*z4^2*z3-756*z5*z3^2+3780*z6*z5+2646*z7*z4+4347*z8*z3
         -15918*z11)
      +ep^12*(54*z3^4-243/2*z4^3-2268*z5*z4*z3-1620*z6*z3^2+4050*z6^2+
         12348*z7*z5+13041/2*z8*z4+12780*z9*z3-43263*z12);

if ( count(`ORDER',1,ep,1) > `DEPTH' ) Discard;

id	G20=
      +1
      +ep^3*(-16*z3)
      +ep^4*(-24*z4)
      +ep^5*(-192*z5)
      +ep^6*(128*z3^2-440*z6)
      +ep^7*(384*z4*z3-2304*z7)
      +ep^8*(288*z4^2+3072*z5*z3-6552*z8)
      +ep^9*(-2048/3*z3^3+4608*z5*z4+7040*z6*z3-87040/3*z9)
      +ep^10*(-3072*z4*z3^2+18432*z5^2+10560*z6*z4+36864*z7*z3-93048*
         z10)
      +ep^11*(-4608*z4^2*z3-24576*z5*z3^2+84480*z6*z5+55296*z7*z4+
         104832*z8*z3-380928*z11)
      +ep^12*(8192/3*z3^4-2304*z4^3-73728*z5*z4*z3-56320*z6*z3^2+96800*
         z6^2+442368*z7*z5+157248*z8*z4+1392640/3*z9*z3-1309528*z12);

if ( count(`ORDER',1,ep,1) > `DEPTH' ) Discard;

id	G30=
      +1
      +ep^3*(-30*z3)
      +ep^4*(-45*z4)
      +ep^5*(-570*z5)
      +ep^6*(450*z3^2-1350*z6)
      +ep^7*(1350*z4*z3-10830*z7)
      +ep^8*(2025/2*z4^2+17100*z5*z3-66465/2*z8)
      +ep^9*(-4500*z3^3+25650*z5*z4+40500*z6*z3-214770*z9)
      +ep^10*(-20250*z4*z3^2+162450*z5^2+60750*z6*z4+324900*z7*z3-
         772650*z10)
      +ep^11*(-30375*z4^2*z3-256500*z5*z3^2+769500*z6*z5+487350*z7*z4+
         996975*z8*z3-4422630*z11)
      +ep^12*(33750*z3^4-30375/2*z4^3-769500*z5*z4*z3-607500*z6*z3^2+
         911250*z6^2+6173100*z7*z5+2990925/2*z8*z4+6443100*z9*z3-
         17592795*z12);

if ( count(`ORDER',1,ep,1) > `DEPTH' ) Discard;

id	G40=
      +1
      +ep^3*(-48*z3)
      +ep^4*(-72*z4)
      +ep^5*(-1344*z5)
      +ep^6*(1152*z3^2-3240*z6)
      +ep^7*(3456*z4*z3-37632*z7)
      +ep^8*(2592*z4^2+64512*z5*z3-120456*z8)
      +ep^9*(-18432*z3^3+96768*z5*z4+155520*z6*z3-1090560*z9)
      +ep^10*(-82944*z4*z3^2+903168*z5^2+233280*z6*z4+1806336*z7*z3-
         4198248*z10)
      +ep^11*(-124416*z4^2*z3-1548288*z5*z3^2+4354560*z6*z5+2709504*z7*
         z4+5781888*z8*z3-32600064*z11)
      +ep^12*(221184*z3^4-62208*z4^3-4644864*z5*z4*z3-3732480*z6*z3^2+
         5248800*z6^2+50577408*z7*z5+8672832*z8*z4+52346880*z9*z3-
         142106184*z12);

if ( count(`ORDER',1,ep,1) > `DEPTH' ) Discard;

id   G50=
      +1
      +ep^3*(-70*z3)
      +ep^4*(-105*z4)
      +ep^5*(-2730*z5)
      +ep^6*(2450*z3^2-6650*z6)
      +ep^7*(7350*z4*z3-106470*z7)
      +ep^8*(11025/2*z4^2+191100*z5*z3-698985/2*z8)
      +ep^9*(-171500/3*z3^3+286650*z5*z4+465500*z6*z3-12799990/3*z9)
      +ep^10*(-257250*z4*z3^2+3726450*z5^2+698250*z6*z4+7452900*z7*z3-
         17130750*z10)
      +ep^11*(-385875*z4^2*z3-6688500*z5*z3^2+18154500*z6*z5+11179350*
         z7*z4+24464475*z8*z3-175317870*z11)
      +ep^12*(3001250/3*z3^4-385875/2*z4^3-20065500*z5*z4*z3-16292500*
         z6*z3^2+22111250*z6^2+290663100*z7*z5+73393425/2*z8*z4+
         895999300/3*z9*z3-810988255*z12)
      ;

if ( count(`ORDER',1,ep,1) > `DEPTH' ) Discard;

id   InvG10 =
      +1
      +ep^3*(6*z3)
      +ep^4*(9*z4)
      +ep^5*(42*z5)
      +ep^6*(90*z6+18*z3^2)
      +ep^7*(294*z7+54*z3*z4)
      +ep^8*(1449/2*z8+81/2*z4^2+252*z3*z5)
      +ep^9*(2130*z9+378*z4*z5+540*z3*z6+36*z3^3)
      +ep^10*(5598*z10+882*z5^2+810*z4*z6+1764*z3*z7+162*z3^2*z4)
      +ep^11*(15918*z11+3780*z5*z6+2646*z4*z7+4347*z3*z8+243*z3*z4^2+
         756*z3^2*z5)
      +ep^12*(43263*z12+4050*z6^2+12348*z5*z7+13041/2*z4*z8+243/2*z4^3+
         12780*z3*z9+2268*z3*z4*z5+1620*z3^2*z6+54*z3^4)
      ;
		
if ( count(`ORDER',1,ep,1) > `DEPTH' ) Discard;
*
*	Now the MSbar conversion.
*	This is done by multiplying by ep*G(1,1,0,0). We cal this GMSbar.
*	We needs as many powers of it as there are loops.
*	There is also the option to keep the zeta(2)=z2
*
#ifdef `MSBAR'
#ifdef `KEEPZETA2'
if ( count(`ORDER',1) == 1 );
	Multiply
      +1
      +ep^2*(-1/2*z2)
      +ep^3*(-7/3*z3)
      +ep^4*(1/8*z2^2-13/4*z4)
      +ep^5*(7/6*z3*z2-31/5*z5)
      +ep^6*(-1/48*z2^3+49/18*z3^2+13/8*z4*z2-61/6*z6)
      +ep^7*(-7/24*z3*z2^2+91/12*z4*z3+31/10*z5*z2-127/7*z7)
      +ep^8*(1/384*z2^4-49/36*z3^2*z2-13/32*z4*z2^2+169/32*z4^2+217/15*
         z5*z3+61/12*z6*z2-253/8*z8)
      +ep^9*(7/144*z3*z2^3-343/162*z3^3-91/24*z4*z3*z2-31/40*z5*z2^2+
         403/20*z5*z4+427/18*z6*z3+127/14*z7*z2-511/9*z9)
      +ep^10*(49/144*z3^2*z2^2+13/192*z4*z2^3-637/72*z4*z3^2-169/64*
         z4^2*z2-217/30*z5*z3*z2+961/50*z5^2-61/48*z6*z2^2+793/24*z6*z4
         +127/3*z7*z3+253/16*z8*z2-1021/10*z10)
      +ep^11*(343/324*z3^3*z2+91/96*z4*z3*z2^2-1183/96*z4^2*z3+31/240*
         z5*z2^3-1519/90*z5*z3^2-403/40*z5*z4*z2-427/36*z6*z3*z2+1891/
         30*z6*z5-127/56*z7*z2^2+1651/28*z7*z4+1771/24*z8*z3+511/18*z9*
         z2-2047/11*z11)
      +ep^12*(2401/1944*z3^4+637/144*z4*z3^2*z2+169/256*z4^2*z2^2-2197/
         384*z4^3+217/120*z5*z3*z2^2-2821/60*z5*z4*z3-961/100*z5^2*z2+
         61/288*z6*z2^3-2989/108*z6*z3^2-793/48*z6*z4*z2+3721/72*z6^2-
         127/6*z7*z3*z2+3937/35*z7*z5-253/64*z8*z2^2+3289/32*z8*z4+3577/
         27*z9*z3+1021/20*z10*z2-4093/12*z12);
elseif ( count(`ORDER',1) == 2 );
	Multiply
      +1
      +ep^2*(-z2)
      +ep^3*(-14/3*z3)
      +ep^4*(1/2*z2^2-13/2*z4)
      +ep^5*(14/3*z3*z2-62/5*z5)
      +ep^6*(-1/6*z2^3+98/9*z3^2+13/2*z4*z2-61/3*z6)
      +ep^7*(-7/3*z3*z2^2+91/3*z4*z3+62/5*z5*z2-254/7*z7)
      +ep^8*(1/24*z2^4-98/9*z3^2*z2-13/4*z4*z2^2+169/8*z4^2+868/15*z5*
         z3+61/3*z6*z2-253/4*z8)
      +ep^9*(7/9*z3*z2^3-1372/81*z3^3-91/3*z4*z3*z2-31/5*z5*z2^2+403/5*
         z5*z4+854/9*z6*z3+254/7*z7*z2-1022/9*z9)
      +ep^10*(-1/128*z2^5+49/9*z3^2*z2^2+13/12*z4*z2^3-637/9*z4*z3^2-
         169/8*z4^2*z2-868/15*z5*z3*z2+1922/25*z5^2-61/6*z6*z2^2+793/6*
         z6*z4+508/3*z7*z3+253/4*z8*z2-1021/5*z10)
      +ep^11*(-35/192*z3*z2^4+1372/81*z3^3*z2+91/6*z4*z3*z2^2-1183/12*
         z4^2*z3+31/15*z5*z2^3-6076/45*z5*z3^2-403/5*z5*z4*z2-854/9*z6*
         z3*z2+3782/15*z6*z5-127/7*z7*z2^2+1651/7*z7*z4+1771/6*z8*z3+
         1022/9*z9*z2-4094/11*z11)
      +ep^12*(5/4608*z2^6-245/144*z3^2*z2^3+4802/243*z3^4-65/256*z4*
         z2^4+637/9*z4*z3^2*z2+169/16*z4^2*z2^2-2197/48*z4^3+434/15*z5*
         z3*z2^2-5642/15*z5*z4*z3-1922/25*z5^2*z2+61/18*z6*z2^3-5978/27
         *z6*z3^2-793/6*z6*z4*z2+3721/18*z6^2-508/3*z7*z3*z2+15748/35*
         z7*z5-253/8*z8*z2^2+3289/8*z8*z4+14308/27*z9*z3+1021/5*z10*z2-
         4093/6*z12);
elseif ( count(`ORDER',1) == 3 );
	Multiply
      +1
      +ep^2*(-3/2*z2)
      +ep^3*(-7*z3)
      +ep^4*(9/8*z2^2-39/4*z4)
      +ep^5*(21/2*z3*z2-93/5*z5)
      +ep^6*(-9/16*z2^3+49/2*z3^2+117/8*z4*z2-61/2*z6)
      +ep^7*(-63/8*z3*z2^2+273/4*z4*z3+279/10*z5*z2-381/7*z7)
      +ep^8*(27/128*z2^4-147/4*z3^2*z2-351/32*z4*z2^2+1521/32*z4^2+651/
         5*z5*z3+183/4*z6*z2-759/8*z8)
      +ep^9*(63/16*z3*z2^3-343/6*z3^3-819/8*z4*z3*z2-837/40*z5*z2^2+
         3627/20*z5*z4+427/2*z6*z3+1143/14*z7*z2-511/3*z9)
      +ep^10*(-1/16*z2^5+441/16*z3^2*z2^2+351/64*z4*z2^3-1911/8*z4*z3^2
         -4563/64*z4^2*z2-1953/10*z5*z3*z2+8649/50*z5^2-549/16*z6*z2^2+
         2379/8*z6*z4+381*z7*z3+2277/16*z8*z2-3063/10*z10)
      +ep^11*(-35/24*z3*z2^4+343/4*z3^3*z2+2457/32*z4*z3*z2^2-10647/32*
         z4^2*z3+837/80*z5*z2^3-4557/10*z5*z3^2-10881/40*z5*z4*z2-1281/
         4*z6*z3*z2+5673/10*z6*z5-3429/56*z7*z2^2+14859/28*z7*z4+5313/8
         *z8*z3+511/2*z9*z2-6141/11*z11)
      +ep^12*(23/1536*z2^6-245/18*z3^2*z2^3+2401/24*z3^4-65/32*z4*z2^4+
         5733/16*z4*z3^2*z2+13689/256*z4^2*z2^2-19773/128*z4^3+5859/40*
         z5*z3*z2^2-25389/20*z5*z4*z3-25947/100*z5^2*z2+549/32*z6*z2^3-
         2989/4*z6*z3^2-7137/16*z6*z4*z2+3721/8*z6^2-1143/2*z7*z3*z2+
         35433/35*z7*z5-6831/64*z8*z2^2+29601/32*z8*z4+3577/3*z9*z3+
         9189/20*z10*z2-4093/4*z12);
elseif ( count(`ORDER',1) == 4 );
	Multiply
      +1
      +ep^2*(-2*z2)
      +ep^3*(-28/3*z3)
      +ep^4*(2*z2^2-13*z4)
      +ep^5*(56/3*z3*z2-124/5*z5)
      +ep^6*(-4/3*z2^3+392/9*z3^2+26*z4*z2-122/3*z6)
      +ep^7*(-56/3*z3*z2^2+364/3*z4*z3+248/5*z5*z2-508/7*z7)
      +ep^8*(2/3*z2^4-784/9*z3^2*z2-26*z4*z2^2+169/2*z4^2+3472/15*z5*z3
         +244/3*z6*z2-253/2*z8)
      +ep^9*(112/9*z3*z2^3-10976/81*z3^3-728/3*z4*z3*z2-248/5*z5*z2^2+
         1612/5*z5*z4+3416/9*z6*z3+1016/7*z7*z2-2044/9*z9)
      +ep^10*(-17/64*z2^5+784/9*z3^2*z2^2+52/3*z4*z2^3-5096/9*z4*z3^2-
         169*z4^2*z2-6944/15*z5*z3*z2+7688/25*z5^2-244/3*z6*z2^2+1586/3
         *z6*z4+2032/3*z7*z3+253*z8*z2-2042/5*z10)
      +ep^11*(-595/96*z3*z2^4+21952/81*z3^3*z2+728/3*z4*z3*z2^2-2366/3*
         z4^2*z3+496/15*z5*z2^3-48608/45*z5*z3^2-3224/5*z5*z4*z2-6832/9
         *z6*z3*z2+15128/15*z6*z5-1016/7*z7*z2^2+6604/7*z7*z4+3542/3*z8
         *z3+4088/9*z9*z2-8188/11*z11)
      +ep^12*(67/768*z2^6-4165/72*z3^2*z2^3+76832/243*z3^4-1105/128*z4*
         z2^4+10192/9*z4*z3^2*z2+169*z4^2*z2^2-2197/6*z4^3+6944/15*z5*
         z3*z2^2-45136/15*z5*z4*z3-15376/25*z5^2*z2+488/9*z6*z2^3-47824/
         27*z6*z3^2-3172/3*z6*z4*z2+7442/9*z6^2-4064/3*z7*z3*z2+62992/
         35*z7*z5-253*z8*z2^2+3289/2*z8*z4+57232/27*z9*z3+4084/5*z10*z2
         -4093/3*z12);
elseif ( count(`ORDER',1) == 5 );
	Multiply
      +1
      +ep^2*(-5/2*z2)
      +ep^3*(-35/3*z3)
      +ep^4*(25/8*z2^2-65/4*z4)
      +ep^5*(175/6*z3*z2-31*z5)
      +ep^6*(-125/48*z2^3+1225/18*z3^2+325/8*z4*z2-305/6*z6)
      +ep^7*(-875/24*z3*z2^2+2275/12*z4*z3+155/2*z5*z2-635/7*z7)
      +ep^8*(625/384*z2^4-6125/36*z3^2*z2-1625/32*z4*z2^2+4225/32*z4^2+
         1085/3*z5*z3+1525/12*z6*z2-1265/8*z8)
      +ep^9*(4375/144*z3*z2^3-42875/162*z3^3-11375/24*z4*z3*z2-775/8*z5
         *z2^2+2015/4*z5*z4+10675/18*z6*z3+3175/14*z7*z2-2555/9*z9)
      +ep^10*(-13/16*z2^5+30625/144*z3^2*z2^2+8125/192*z4*z2^3-79625/72
         *z4*z3^2-21125/64*z4^2*z2-5425/6*z5*z3*z2+961/2*z5^2-7625/48*
         z6*z2^2+19825/24*z6*z4+3175/3*z7*z3+6325/16*z8*z2-1021/2*z10)
      +ep^11*(-455/24*z3*z2^4+214375/324*z3^3*z2+56875/96*z4*z3*z2^2-
         147875/96*z4^2*z3+3875/48*z5*z2^3-37975/18*z5*z3^2-10075/8*z5*
         z4*z2-53375/36*z6*z3*z2+9455/6*z6*z5-15875/56*z7*z2^2+41275/28
         *z7*z4+44275/24*z8*z3+12775/18*z9*z2-10235/11*z11)
      +ep^12*(775/2304*z2^6-3185/18*z3^2*z2^3+1500625/1944*z3^4-845/32*
         z4*z2^4+398125/144*z4*z3^2*z2+105625/256*z4^2*z2^2-274625/384*
         z4^3+27125/24*z5*z3*z2^2-70525/12*z5*z4*z3-4805/4*z5^2*z2+
         38125/288*z6*z2^3-373625/108*z6*z3^2-99125/48*z6*z4*z2+93025/
         72*z6^2-15875/6*z7*z3*z2+19685/7*z7*z5-31625/64*z8*z2^2+82225/
         32*z8*z4+89425/27*z9*z3+5105/4*z10*z2-20465/12*z12);
endif;
#else
if ( count(`ORDER',1) == 1 );
	Multiply
      +1
      +ep^3*(-7/3*z3)
      +ep^4*(-13/4*z4)
      +ep^5*(-31/5*z5)
      +ep^6*(49/18*z3^2-61/6*z6)
      +ep^7*(91/12*z4*z3-127/7*z7)
      +ep^8*(169/32*z4^2+217/15*z5*z3-253/8*z8)
      +ep^9*(-343/162*z3^3+403/20*z5*z4+427/18*z6*z3-511/9*z9)
      +ep^10*(-637/72*z4*z3^2+961/50*z5^2+793/24*z6*z4+127/3*z7*z3-1021/
         10*z10)
      +ep^11*(-1183/96*z4^2*z3-1519/90*z5*z3^2+1891/30*z6*z5+1651/28*z7
         *z4+1771/24*z8*z3-2047/11*z11)
      +ep^12*(2401/1944*z3^4-2197/384*z4^3-2821/60*z5*z4*z3-2989/108*z6
         *z3^2+3721/72*z6^2+3937/35*z7*z5+3289/32*z8*z4+3577/27*z9*z3-
         4093/12*z12);
elseif ( count(`ORDER',1) == 2 );
	Multiply
      +1
      +ep^3*(-14/3*z3)
      +ep^4*(-13/2*z4)
      +ep^5*(-62/5*z5)
      +ep^6*(98/9*z3^2-61/3*z6)
      +ep^7*(91/3*z4*z3-254/7*z7)
      +ep^8*(169/8*z4^2+868/15*z5*z3-253/4*z8)
      +ep^9*(-1372/81*z3^3+403/5*z5*z4+854/9*z6*z3-1022/9*z9)
      +ep^10*(-637/9*z4*z3^2+1922/25*z5^2+793/6*z6*z4+508/3*z7*z3-1021/
         5*z10)
      +ep^11*(-1183/12*z4^2*z3-6076/45*z5*z3^2+3782/15*z6*z5+1651/7*z7*
         z4+1771/6*z8*z3-4094/11*z11)
      +ep^12*(4802/243*z3^4-2197/48*z4^3-5642/15*z5*z4*z3-5978/27*z6*
         z3^2+3721/18*z6^2+15748/35*z7*z5+3289/8*z8*z4+14308/27*z9*z3-
         4093/6*z12);
elseif ( count(`ORDER',1) == 3 );
	Multiply
      +1
      +ep^3*(-7*z3)
      +ep^4*(-39/4*z4)
      +ep^5*(-93/5*z5)
      +ep^6*(49/2*z3^2-61/2*z6)
      +ep^7*(273/4*z4*z3-381/7*z7)
      +ep^8*(1521/32*z4^2+651/5*z5*z3-759/8*z8)
      +ep^9*(-343/6*z3^3+3627/20*z5*z4+427/2*z6*z3-511/3*z9)
      +ep^10*(-1911/8*z4*z3^2+8649/50*z5^2+2379/8*z6*z4+381*z7*z3-3063/
         10*z10)
      +ep^11*(-10647/32*z4^2*z3-4557/10*z5*z3^2+5673/10*z6*z5+14859/28*
         z7*z4+5313/8*z8*z3-6141/11*z11)
      +ep^12*(2401/24*z3^4-19773/128*z4^3-25389/20*z5*z4*z3-2989/4*z6*
         z3^2+3721/8*z6^2+35433/35*z7*z5+29601/32*z8*z4+3577/3*z9*z3-
         4093/4*z12);
elseif ( count(`ORDER',1) == 4 );
	Multiply
      +1
      +ep^3*(-28/3*z3)
      +ep^4*(-13*z4)
      +ep^5*(-124/5*z5)
      +ep^6*(392/9*z3^2-122/3*z6)
      +ep^7*(364/3*z4*z3-508/7*z7)
      +ep^8*(169/2*z4^2+3472/15*z5*z3-253/2*z8)
      +ep^9*(-10976/81*z3^3+1612/5*z5*z4+3416/9*z6*z3-2044/9*z9)
      +ep^10*(-5096/9*z4*z3^2+7688/25*z5^2+1586/3*z6*z4+2032/3*z7*z3-
         2042/5*z10)
      +ep^11*(-2366/3*z4^2*z3-48608/45*z5*z3^2+15128/15*z6*z5+6604/7*z7
         *z4+3542/3*z8*z3-8188/11*z11)
      +ep^12*(76832/243*z3^4-2197/6*z4^3-45136/15*z5*z4*z3-47824/27*z6*
         z3^2+7442/9*z6^2+62992/35*z7*z5+3289/2*z8*z4+57232/27*z9*z3-
         4093/3*z12);
elseif ( count(`ORDER',1) == 5 );
	Multiply
      +1
      +ep^3*(-35/3*z3)
      +ep^4*(-65/4*z4)
      +ep^5*(-31*z5)
      +ep^6*(1225/18*z3^2-305/6*z6)
      +ep^7*(2275/12*z4*z3-635/7*z7)
      +ep^8*(4225/32*z4^2+1085/3*z5*z3-1265/8*z8)
      +ep^9*(-42875/162*z3^3+2015/4*z5*z4+10675/18*z6*z3-2555/9*z9)
      +ep^10*(-79625/72*z4*z3^2+961/2*z5^2+19825/24*z6*z4+3175/3*z7*z3-
         1021/2*z10)
      +ep^11*(-147875/96*z4^2*z3-37975/18*z5*z3^2+9455/6*z6*z5+41275/28
         *z7*z4+44275/24*z8*z3-10235/11*z11)
      +ep^12*(1500625/1944*z3^4-274625/384*z4^3-70525/12*z5*z4*z3-
         373625/108*z6*z3^2+93025/72*z6^2+19685/7*z7*z5+82225/32*z8*z4+
         89425/27*z9*z3-20465/12*z12);
endif;
#endif
if ( count(`ORDER',1,ep,1) > `DEPTH' ) Discard;
.sort:Masters-4;
PolyRatFun,rat(expand,ep,16);
id	`ORDER' = `ORDER'*rat(1,1-2*ep);
.sort:Masters-5;
PolyRatFun;
id	rat(x?) = x;
id	rat(x1?,x2?) = x1/x2;
#endif
if ( count(`ORDER',1,ep,1) > `DEPTH' ) Discard;
#endprocedure
